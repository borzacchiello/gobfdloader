package gobfdloader_test

import (
	"bytes"
	"compress/zlib"
	"io"
	"testing"

	"github.com/borzacchiello/gobfdloader"
)

func TestGoloadbfd(t *testing.T) {
	var compressed bytes.Buffer
	compressed.Write([]byte{
		0x78, 0x9c, 0xec, 0x9a, 0x5d, 0x4c, 0x1c, 0x55, 0x14, 0xc7, 0xcf, 0x2c,
		0x50, 0x06, 0xdc, 0xce, 0x4e, 0x0c, 0x9a, 0x4d, 0xac, 0x75, 0x31, 0xfb,
		0x50, 0x22, 0x6c, 0x18, 0xc4, 0xb4, 0x54, 0x0a, 0xb3, 0x7c, 0xc8, 0x25,
		0x41, 0x53, 0xa1, 0x18, 0x92, 0xb6, 0x21, 0x50, 0xd6, 0x82, 0xf2, 0x15,
		0x98, 0xad, 0xb4, 0xd9, 0x54, 0x92, 0x75, 0x09, 0x53, 0xd9, 0xe8, 0xbb,
		0x2f, 0xbc, 0xf8, 0x64, 0x8c, 0x8f, 0xda, 0x3e, 0xb4, 0x4b, 0xb6, 0xf2,
		0xa1, 0x3e, 0x50, 0x4c, 0xec, 0x43, 0x63, 0x63, 0x4c, 0x48, 0x06, 0x17,
		0xb3, 0x8b, 0xda, 0x16, 0xdb, 0xb8, 0xc7, 0xdc, 0xd9, 0x3b, 0xc3, 0xec,
		0xd6, 0xef, 0x98, 0x18, 0x93, 0xfb, 0x0b, 0xcb, 0xc9, 0xf9, 0xdf, 0xf3,
		0xbf, 0xe7, 0xde, 0xd9, 0x7d, 0x99, 0xe4, 0xbc, 0xd9, 0xde, 0xf5, 0x82,
		0x4b, 0x10, 0xc0, 0xc2, 0x05, 0x4d, 0x60, 0x66, 0xb2, 0x6a, 0xe6, 0x2a,
		0xd3, 0xe5, 0xa7, 0xed, 0x12, 0x50, 0xe1, 0x08, 0x94, 0x82, 0x0a, 0x22,
		0x94, 0x9a, 0xb5, 0xc5, 0xe0, 0x44, 0xcd, 0x8b, 0x6e, 0x17, 0xe4, 0x45,
		0x90, 0x73, 0x81, 0xfa, 0x4a, 0x1c, 0xb9, 0xd5, 0xcf, 0x8a, 0xfd, 0xac,
		0xbe, 0xff, 0x37, 0x7c, 0x66, 0x3f, 0x1f, 0xd3, 0x7d, 0x6a, 0x5e, 0x5c,
		0x60, 0x57, 0xb1, 0xa2, 0xe5, 0x2b, 0x66, 0x9f, 0x55, 0xa6, 0xaf, 0x0a,
		0x6a, 0x5e, 0xb4, 0xb7, 0x63, 0x51, 0x84, 0x7c, 0x9f, 0xc1, 0x7c, 0x06,
		0xab, 0xb7, 0xa2, 0x9f, 0xd5, 0xf9, 0x1d, 0xf5, 0x94, 0x9e, 0x4d, 0x6d,
		0xe8, 0x9f, 0xf4, 0x7b, 0x79, 0x53, 0x1b, 0xda, 0x07, 0x7f, 0x1d, 0xd9,
		0xd1, 0x57, 0x66, 0xcf, 0xb4, 0xe3, 0xa5, 0x5e, 0x70, 0x01, 0x24, 0xa8,
		0x56, 0xe4, 0x58, 0xaf, 0x60, 0x39, 0x5d, 0x1f, 0x38, 0xba, 0xe0, 0x3f,
		0x7e, 0xe7, 0xce, 0x72, 0x83, 0x7f, 0xa3, 0xed, 0xf3, 0x17, 0xcf, 0x2e,
		0xbe, 0x97, 0xec, 0xad, 0xfe, 0x1b, 0x6d, 0x39, 0x1c, 0x0e, 0x87, 0xc3,
		0xe1, 0x70, 0x38, 0x1c, 0x0e, 0x87, 0xf3, 0x3f, 0xe3, 0x47, 0xcf, 0xc1,
		0xfb, 0xbd, 0x44, 0xdf, 0x24, 0xf1, 0x92, 0x1d, 0x0f, 0x00, 0xd1, 0x57,
		0x8c, 0x1d, 0x00, 0xb8, 0x46, 0xd7, 0x0c, 0xab, 0x80, 0x9c, 0xc1, 0x4f,
		0x1a, 0x01, 0x40, 0xb9, 0xab, 0x6c, 0xb4, 0xd3, 0xbf, 0x44, 0xbb, 0xb2,
		0xe6, 0x29, 0x49, 0x65, 0xd9, 0x22, 0xcd, 0x6d, 0x35, 0x69, 0x39, 0xe8,
		0x9b, 0xaf, 0x53, 0x27, 0x31, 0xd4, 0x9a, 0x2e, 0x97, 0x03, 0xed, 0xb2,
		0xab, 0x6c, 0xf4, 0x90, 0x7b, 0x3b, 0x24, 0xba, 0x2d, 0x13, 0xfd, 0x4b,
		0xda, 0xf5, 0x36, 0x22, 0x46, 0x93, 0xb5, 0x24, 0xae, 0xf9, 0x3d, 0x57,
		0xa8, 0xf5, 0x1a, 0xfd, 0x37, 0x7f, 0xca, 0xef, 0x31, 0x3e, 0x40, 0x44,
		0x12, 0xbd, 0x2e, 0x9f, 0x4c, 0x26, 0x83, 0x27, 0x3a, 0xf5, 0x9f, 0x7a,
		0x95, 0xef, 0x7b, 0x88, 0xfe, 0xa0, 0xb3, 0x61, 0xfb, 0x9c, 0xaf, 0x4b,
		0xff, 0x96, 0xe8, 0xb7, 0xcd, 0x5a, 0x52, 0xf5, 0x9d, 0x31, 0x4b, 0x4b,
		0x63, 0x89, 0x8b, 0x6e, 0x22, 0x24, 0x89, 0xf0, 0x69, 0xea, 0x96, 0x92,
		0x48, 0x15, 0x45, 0x57, 0xf1, 0xe4, 0xe9, 0xe0, 0x29, 0xfb, 0x60, 0x45,
		0x0f, 0x5f, 0x25, 0xb7, 0x16, 0xdd, 0xf6, 0x12, 0x3d, 0xe2, 0x17, 0x8d,
		0x24, 0xdd, 0xee, 0xed, 0x88, 0x5f, 0x24, 0xfa, 0xb2, 0x31, 0x8f, 0x88,
		0x41, 0x3d, 0x11, 0x5d, 0xc5, 0xf6, 0x58, 0x62, 0xa6, 0xe2, 0xaa, 0xd9,
		0x2b, 0x7e, 0x6c, 0x59, 0x02, 0x30, 0x46, 0x11, 0x71, 0x69, 0xf7, 0x29,
		0x12, 0xbd, 0xee, 0x35, 0xb7, 0xe8, 0x26, 0x31, 0x0c, 0x7b, 0xaf, 0xe4,
		0x4a, 0x9e, 0x7b, 0x5f, 0x62, 0xd7, 0x30, 0x8c, 0x2c, 0x62, 0xaa, 0xc4,
		0xf8, 0x39, 0x8b, 0x68, 0x2d, 0xce, 0x59, 0x8b, 0x7d, 0x5b, 0x9f, 0x65,
		0x11, 0xd9, 0x17, 0xf1, 0x0b, 0xb9, 0xf7, 0x35, 0xf1, 0x90, 0x34, 0x89,
		0xe1, 0xf9, 0xc7, 0xad, 0xd2, 0x7e, 0x7b, 0x9f, 0xc5, 0x2c, 0x22, 0xd1,
		0xd3, 0xa7, 0xb7, 0xde, 0xc1, 0x9c, 0x85, 0x9e, 0xd9, 0x3c, 0x91, 0x3a,
		0x1f, 0xf1, 0xbb, 0x49, 0x3c, 0xe2, 0x77, 0x1b, 0x37, 0xb3, 0xe6, 0xf3,
		0xca, 0x9d, 0x88, 0xe8, 0xbb, 0xb3, 0x47, 0x40, 0x2b, 0x21, 0x98, 0x48,
		0xdd, 0x25, 0x55, 0xbb, 0x96, 0x48, 0x62, 0x1b, 0x5a, 0xb5, 0xb2, 0xd6,
		0x15, 0x6f, 0xc1, 0xce, 0x86, 0xd5, 0x73, 0x8f, 0xaa, 0x97, 0x1a, 0x25,
		0xf5, 0x2d, 0xd4, 0xca, 0xd4, 0xf9, 0x46, 0x91, 0xe0, 0x52, 0x6a, 0x8b,
		0x34, 0xdc, 0x98, 0x2e, 0x5b, 0x2e, 0x16, 0x81, 0x66, 0x3f, 0x24, 0x95,
		0x84, 0x69, 0x9d, 0x6d, 0xae, 0xb9, 0x4c, 0xfb, 0x85, 0xf7, 0x11, 0x5c,
		0x89, 0xae, 0xa1, 0x92, 0x50, 0x2f, 0x1d, 0x8e, 0xbf, 0xb2, 0x3e, 0x7b,
		0xbf, 0xec, 0x8d, 0xfd, 0xaf, 0x27, 0xca, 0x3d, 0x57, 0x37, 0x08, 0xae,
		0x08, 0xeb, 0x29, 0xc3, 0xf3, 0xd1, 0x52, 0xf2, 0xbf, 0xfe, 0x79, 0x73,
		0x38, 0x1c, 0x0e, 0x87, 0xc3, 0xe1, 0x70, 0x38, 0x1c, 0x0e, 0x87, 0x51,
		0x5f, 0x57, 0x09, 0xe5, 0x50, 0x0b, 0x35, 0x2c, 0xaf, 0x60, 0x51, 0xb8,
		0xd0, 0x0d, 0xc2, 0x8c, 0x2c, 0x3c, 0xe1, 0x2e, 0x15, 0xdf, 0x15, 0x00,
		0x0e, 0x40, 0xee, 0xb3, 0x9e, 0x46, 0xac, 0xa4, 0x05, 0xed, 0x92, 0x3c,
		0xe7, 0x6a, 0xdd, 0xbf, 0xcf, 0xe1, 0x6b, 0x04, 0x80, 0x1b, 0x69, 0xc4,
		0x27, 0x1d, 0xfb, 0xcb, 0x00, 0x70, 0x02, 0x00, 0xbe, 0x4a, 0x23, 0x3e,
		0xe6, 0xd0, 0x86, 0x01, 0xe0, 0x66, 0x1a, 0xd1, 0xcb, 0x34, 0x1f, 0x00,
		0x44, 0x00, 0xe0, 0x56, 0x1a, 0xb1, 0x8d, 0x0a, 0xc7, 0x25, 0x39, 0xea,
		0xea, 0x90, 0x7c, 0xaf, 0x49, 0x72, 0x50, 0x12, 0x83, 0xf4, 0x4d, 0xf2,
		0x10, 0x00, 0x2c, 0x02, 0xc0, 0x83, 0x34, 0xe2, 0x31, 0x5a, 0xd3, 0x22,
		0xc9, 0x0b, 0xae, 0x36, 0xc9, 0x3b, 0x57, 0xd4, 0x2a, 0xf9, 0xa2, 0xc5,
		0x93, 0x92, 0x37, 0x28, 0xc9, 0x2d, 0x92, 0xc8, 0x7a, 0x7c, 0x01, 0x00,
		0xee, 0x0c, 0xe2, 0x01, 0xc7, 0x19, 0xbf, 0xa1, 0x31, 0x83, 0xd8, 0x4a,
		0x05, 0x22, 0xf9, 0x2e, 0x48, 0xa2, 0xa9, 0xef, 0x02, 0x40, 0x73, 0x06,
		0xb1, 0x89, 0xdd, 0x4d, 0x93, 0x44, 0xa0, 0x67, 0x93, 0x05, 0x80, 0x50,
		0x06, 0xf1, 0x59, 0xfb, 0xce, 0x23, 0xe6, 0xfe, 0xd4, 0x53, 0x2d, 0x00,
		0x44, 0x32, 0xec, 0x79, 0x10, 0xc9, 0xd7, 0x27, 0x89, 0x66, 0xdf, 0x36,
		0x01, 0x20, 0x96, 0xc9, 0xbf, 0x6f, 0x9f, 0x00, 0x30, 0x97, 0x41, 0x7c,
		0xde, 0xa1, 0x8d, 0x0a, 0x00, 0x1f, 0x66, 0x10, 0xeb, 0x98, 0xd6, 0xd1,
		0xda, 0x7a, 0xd4, 0x77, 0xa8, 0x77, 0x30, 0x3c, 0xae, 0x85, 0x7d, 0x8a,
		0x12, 0xa8, 0x0f, 0xd4, 0xd6, 0x28, 0x61, 0x33, 0x55, 0x2e, 0xd6, 0xd5,
		0x05, 0x6a, 0xeb, 0xab, 0x98, 0x0c, 0x10, 0x98, 0x1e, 0x9e, 0xd6, 0xa6,
		0xb4, 0x81, 0x41, 0x08, 0x8c, 0x4f, 0x68, 0xa1, 0xc0, 0xd9, 0xf1, 0x70,
		0x60, 0x72, 0x6a, 0x62, 0x32, 0x34, 0xa5, 0x9d, 0x77, 0x48, 0x83, 0xe1,
		0x91, 0xd1, 0xa1, 0x9a, 0x91, 0x21, 0x08, 0x68, 0xa1, 0x19, 0x0d, 0x02,
		0x53, 0x13, 0x43, 0x03, 0xda, 0x00, 0x04, 0x42, 0xc3, 0xfd, 0xaf, 0x4e,
		0x0d, 0x8c, 0x85, 0x20, 0x70, 0x66, 0x62, 0x6c, 0x2c, 0x34, 0xae, 0xfd,
		0x5b, 0xbf, 0xa7, 0x47, 0x00, 0xa0, 0xd4, 0x9c, 0x23, 0xc9, 0xb1, 0x37,
		0xf7, 0xb0, 0xf7, 0x3d, 0x3b, 0x11, 0x0b, 0xf2, 0x83, 0x05, 0xfe, 0xbd,
		0x79, 0x8b, 0x5c, 0xee, 0x2f, 0xa8, 0x2f, 0x2e, 0xc8, 0x15, 0x36, 0x23,
		0x62, 0xcf, 0x50, 0xd8, 0x73, 0x25, 0xb9, 0x60, 0xcf, 0x93, 0x30, 0x84,
		0x02, 0xff, 0x61, 0xa6, 0xd9, 0x65, 0xf6, 0x7c, 0x49, 0x2e, 0x94, 0xc3,
		0x1f, 0xfb, 0x9b, 0x0b, 0xfc, 0x32, 0xf3, 0xcb, 0xcc, 0x1f, 0x29, 0x30,
		0x14, 0xde, 0xbf, 0x93, 0xf9, 0x6b, 0x0b, 0xf4, 0x85, 0xca, 0x5c, 0x7c,
		0xe6, 0x77, 0xfa, 0x3b, 0x63, 0x11, 0x3c, 0xcc, 0xc7, 0xcc, 0xdf, 0xfd,
		0x27, 0xe7, 0xff, 0x35, 0x00, 0x00, 0xff, 0xff, 0x21, 0x41, 0xb2, 0xb8,
	})

	r, err := zlib.NewReader(&compressed)
	if err != nil {
		t.Error(err)
		return
	}
	defer r.Close()

	decompressed, err := io.ReadAll(r)
	if err != nil {
		t.Error(err)
		return
	}

	l, err := gobfdloader.LoadBinaryBlob(decompressed)
	if err != nil {
		t.Error(err)
		return
	}
	if l.String() != "LoadedBinary { ELF | i386:x86-64 | 5 sections | 0 symbols | 0 relocations }" {
		t.Errorf("unexpected LoadedBinary [%s]", l.String())
		return
	}
}
